name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: test-392414
  PROJECT_NUMBER: 691947957481

  CLUSTER: my-gke-cluster
  CLUSTER_ZONE: us-east1-b

  REPOSITORY:  my-repository
  REPOSITORY_REGION: us-east1

  IMAGE: awesome-mvc

jobs:
  build:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    #
    # Authenticate to Google Cloud using workload identity federation
    #
    - id: 'auth'
      name: 'Obtain access token by using workload identity federation'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        create_credentials_file: true
        token_format: access_token
        workload_identity_provider:  projects/691947957481/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
        service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

    - name: Connect to Artifact Registry
      run: |-
        echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev

    - name: Connect to GKE
      uses: google-github-actions/get-gke-credentials@v0.4.0
      with:
        cluster_name: ${{ env.CLUSTER }}
        location: ${{ env.CLUSTER_ZONE }}
        
    - id: get-pods
      run: kubectl get pods
      

    #
    # Build the .NET code
    #
    #- name: Build solution
     # run: |-
    #    dotnet publish applications/clouddemo/netcore/CloudDemo.MvcCore.sln \
    #        --configuration Release \
    #        --framework net6.0

    #
    # Build the Docker image and push it to Artifact Registry
    #
    - name: Create image tag
      run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

    - name: Lock image version in deployment.yaml
      run: sed -i 's|awesome-mvc|${{ env.IMAGE_TAG }}|g' deployment.yaml

    - name: Build Docker image
      run: docker build --tag "${{ env.IMAGE_TAG }}" .

    - name: Publish Docker image to Google Artifact Registry
      run: docker push "${{ env.IMAGE_TAG }}"
    #- name:  Auth to pull docker image
    #  run: gcloud auth configure-docker us-east1-docker.pkg.dev

    #
    # Deploy to GKE
    #
    - name: Deploy to GKE
      run: kubectl apply -f deployment.yaml
        #kubectl rollout status deployment/clouddemo-netcore

